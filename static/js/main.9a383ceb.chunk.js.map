{"version":3,"sources":["components/home/Index.js","App.js","serviceWorker.js","index.js"],"names":["HomeIndex","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","sidebar","init","setState","_this2","react_default","a","createElement","className","class","id","onClick","toggleSidedbar","React","Component","App","Index_HomeIndex","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9a383ceb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.css'\r\nexport default class HomeIndex extends React.Component {\r\n\r\n\t\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tsidebar:false\r\n\r\n\t\t};\r\n\t\t\r\n\t}\r\n\r\n\ttoggleSidedbar(){\r\n\t\tlet init=this.state.sidebar;\r\n\t\tinit=!init;\r\n\t\tthis.setState({sidebar:init})\r\n\t}\r\n\r\nrender(){\r\n\r\nreturn(\r\n<div className=\"home\">\r\n\r\n\t  <div className='stars'></div>\r\n\t  <div className='twinkling'></div>\r\n\t  <div className='clouds'></div>\r\n\r\n\t\t<div className=\"content\">\r\n\t\t\t\t\t<div class=\"rocket\">\r\n\t\t\t\t\t    <div class=\"rocket-body\">\r\n\t\t\t\t\t      <div class=\"rbody\">\r\n\t\t\t\t\t\t      <div class=\"text\">E-CELL<br/>IIITT\r\n\t       \t\t\t\t\t\t </div></div>\r\n\t\t\t\t\t      <div class=\"fin fin-left\"></div>\r\n\t\t\t\t\t      <div class=\"fin fin-right\"></div>\r\n\t\t\t\t\t      <div class=\"window\"></div>\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t\t    <div class=\"exhaust-flame\"></div>\r\n\t\t\t\t\t    <ul class=\"exhaust-fumes\">\r\n\t\t\t\t\t      <li></li>\r\n\t\t\t\t\t      <li></li>\r\n\t\t\t\t\t      <li></li>\r\n\t\t\t\t\t      <li></li>\r\n\t\t\t\t\t      <li></li>\r\n\t\t\t\t\t      <li></li>\r\n\t\t\t\t\t      <li></li>\r\n\t\t\t\t\t      <li></li>\r\n\t\t\t\t\t      <li></li>\r\n\t\t\t\t\t    </ul>\r\n\t\t\t\t\t    <ul class=\"star\">\r\n\t\t\t\t\t      <li></li>\r\n\t\t\t\t\t      <li></li>\r\n\t\t\t\t\t      <li></li>\r\n\t\t\t\t\t      <li></li>\r\n\t\t\t\t\t      <li></li>\r\n\t\t\t\t\t      <li></li>\r\n\t\t\t\t\t      <li></li>\r\n\t\t\t\t\t    </ul>\r\n\t\t\t\t   </div>\r\n\r\n\t\t\t\t <div class=\"welcome\">\r\n\t\t\t\t <div className=\"heading\">WE'RE HERE<br/>TO CHANGE</div>\r\n\t\t\t\t<div  id=\"earth\">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"heading\">THE WORLD</div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\t\t</div>\r\n\r\n\t\t<div className=\"myalien\" onClick={()=>this.toggleSidedbar()}>\r\n\r\n\t\t\t\t <div id=\"wrap\">\r\n\t\t\t\t\t  <div id=\"alien\">\r\n\t\t\t\t\t    <div class=\"body\">\r\n\t\t\t\t\t      <div class=\"eyes left\"></div>\r\n\t\t\t\t\t      <div class=\"eyes right\"></div>\r\n\t\t\t\t\t      <div class=\"mouse\"></div>\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t\t    <div class=\"arms left\"></div>\r\n\t\t\t\t\t    <div class=\"arms right\"></div>\r\n\t\t\t\t\t    <div class=\"legs left\"></div>\r\n\t\t\t\t\t    <div class=\"legs right\"></div>\r\n\t\t\t\t\t    <div class=\"halo-set\">\r\n\t\t\t\t\t      <div class=\"halo\"></div>\r\n\t\t\t\t\t      <div class=\"halo\"></div>\r\n\t\t\t\t\t      <div class=\"halo\"></div>\r\n\t\t\t\t\t      <div class=\"halo\"></div>\r\n\t\t\t\t\t      <div class=\"halo\"></div>\r\n\t\t\t\t\t    </div>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</div>\r\n  \r\n\t\t\t\t</div>\r\n\r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\t)\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\n\nimport Home from './components/home/Index';\n\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Home />\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}